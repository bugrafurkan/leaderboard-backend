server {
    listen 80;
    server_name localhost;

    # HTTP to HTTPS yönlendirme (SSL sertifikası eklendiğinde uncomment edilmeli)
    # return 301 https://$host$request_uri;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # API endpointlerine gelen istekleri yönlendir
    location /api {
        # Rate limiting - saniyede 10 istek
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn conn_limit 10;

        # Headers
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Proxy to upstream
        proxy_pass http://leaderboard_backend;
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;
        
        # Proxy timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # WebSocket yönlendirmesi
    location /socket.io {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://leaderboard_backend;
    }

    # Monitoring endpointleri
    location /metrics {
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://leaderboard_backend/metrics;
    }

    # Sağlık kontrolü
    location /health {
        access_log off;
        return 200 "OK";
    }

    # Prometheus ve Grafana UI'ları için
    location /prometheus/ {
        auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/.htpasswd;
        proxy_pass http://prometheus:9090/;
    }

    location /grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Hata sayfaları
    error_page  404              /404.html;
    error_page  500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# HTTPS yapılandırması - SSL sertifikası eklendiğinde uncomment edilmeli
# server {
#     listen 443 ssl http2;
#     server_name localhost;
# 
#     ssl_certificate     /etc/nginx/ssl/server.crt;
#     ssl_certificate_key /etc/nginx/ssl/server.key;
#     ssl_protocols       TLSv1.2 TLSv1.3;
#     ssl_ciphers         HIGH:!aNULL:!MD5;
# 
#     # SSL ayarları
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
# 
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
# 
#     # HTTP yapılandırmasından aynı location bloklarını buraya ekleyin
#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }
# 
#     location /api { ... }
#     location /socket.io { ... }
#     location /metrics { ... }
#     location /health { ... }
#     location /prometheus/ { ... }
#     location /grafana/ { ... }
# }