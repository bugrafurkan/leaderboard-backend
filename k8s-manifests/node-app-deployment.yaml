apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-app
  template:
    metadata:
      labels:
        app: node-app
    spec:
      containers:
        - name: node-app-container
          image: bfkbt14/leaderboard-backend:latest
          command: ["node", "dist/index.js"]
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 250m
              memory: 512Mi
          env:
            - name: NODE_ENV
              value: "development"
            - name: PORT
              value: "3000"
            - name: DB_HOST
              value: "postgres-db"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: "postgres"
            - name: DB_PASS
              value: "postgres"
            - name: DB_NAME
              value: "leaderboard_db"
            - name: RABBITMQ_URL
              value: "amqp://guest:guest@rabbitmq:5672"
            #- name: REDIS_URL
            #  value: "redis://redis-service:6379"
            - name: REDIS_CLUSTER_NODES
              value: "redis-cluster-0.redis-service:6379,redis-cluster-1.redis-service:6379,redis-cluster-2.redis-service:6379"
            - name: SOCKET_SERVER_URL
              value: "http://<your-loadbalancer-ip>"
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5

